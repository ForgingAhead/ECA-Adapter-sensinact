/*
 * generated by Xtext 2.13.0.RC1
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package nii.bigclout.ecaadapter.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package nii.bigclout.ecaadapter.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nii.bigclout.ecaadapter.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RunTimeModel";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRunTimeModel
entryRuleRunTimeModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunTimeModelRule()); }
	iv_ruleRunTimeModel=ruleRunTimeModel
	{ $current=$iv_ruleRunTimeModel.current; }
	EOF;

// Rule RunTimeModel
ruleRunTimeModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRunTimeModelAccess().getRunTimeModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRunTimeModelAccess().getEnvDataEnvironmentMetaDataParserRuleCall_1_0());
				}
				lv_envData_1_0=ruleEnvironmentMetaData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunTimeModelRule());
					}
					add(
						$current,
						"envData",
						lv_envData_1_0,
						"nii.bigclout.ecaadapter.Dsl.EnvironmentMetaData");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRunTimeModelAccess().getAppDataAppMetaDataParserRuleCall_2_0());
				}
				lv_appData_2_0=ruleAppMetaData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunTimeModelRule());
					}
					add(
						$current,
						"appData",
						lv_appData_2_0,
						"nii.bigclout.ecaadapter.Dsl.AppMetaData");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStateRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"nii.bigclout.ecaadapter.Dsl.ID");
			}
		)
	)
;

// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	iv_ruleResource=ruleResource
	{ $current=$iv_ruleResource.current; }
	EOF;

// Rule Resource
ruleResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='resource'
		{
			newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"nii.bigclout.ecaadapter.Dsl.ID");
				}
			)
		)
		(
			otherlv_2='can'
			{
				newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getCanKeyword_2_0());
			}
			otherlv_3='be'
			{
				newLeafNode(otherlv_3, grammarAccess.getResourceAccess().getBeKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_2_0());
					}
					lv_states_4_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getResourceRule());
						}
						add(
							$current,
							"states",
							lv_states_4_0,
							"nii.bigclout.ecaadapter.Dsl.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getResourceAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_3_1_0());
						}
						lv_states_6_0=ruleState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getResourceRule());
							}
							add(
								$current,
								"states",
								lv_states_6_0,
								"nii.bigclout.ecaadapter.Dsl.State");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleAppMetaData
entryRuleAppMetaData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAppMetaDataRule()); }
	iv_ruleAppMetaData=ruleAppMetaData
	{ $current=$iv_ruleAppMetaData.current; }
	EOF;

// Rule AppMetaData
ruleAppMetaData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='app'
		{
			newLeafNode(otherlv_0, grammarAccess.getAppMetaDataAccess().getAppKeyword_0());
		}
		(
			(
				lv_appID_1_0=RULE_ID
				{
					newLeafNode(lv_appID_1_0, grammarAccess.getAppMetaDataAccess().getAppIDIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAppMetaDataRule());
					}
					setWithLastConsumed(
						$current,
						"appID",
						lv_appID_1_0,
						"nii.bigclout.ecaadapter.Dsl.ID");
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getAppMetaDataAccess().getLBRACEParserRuleCall_2());
		}
		ruleLBRACE
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAppMetaDataAccess().getSpecificationSpecificationParserRuleCall_3_0());
				}
				lv_specification_3_0=ruleSpecification
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAppMetaDataRule());
					}
					set(
						$current,
						"specification",
						lv_specification_3_0,
						"nii.bigclout.ecaadapter.Dsl.Specification");
					afterParserOrEnumRuleCall();
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getAppMetaDataAccess().getRBRACEParserRuleCall_4());
		}
		ruleRBRACE
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	iv_ruleSpecification=ruleSpecification
	{ $current=$iv_ruleSpecification.current; }
	EOF;

// Rule Specification
ruleSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_specID_0_0=RULE_ID
				{
					newLeafNode(lv_specID_0_0, grammarAccess.getSpecificationAccess().getSpecIDIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"specID",
						lv_specID_0_0,
						"nii.bigclout.ecaadapter.Dsl.ID");
				}
			)
		)?
		(
			otherlv_1='priority'
			{
				newLeafNode(otherlv_1, grammarAccess.getSpecificationAccess().getPriorityKeyword_1_0());
			}
			(
				(
					lv_priority_2_0=RULE_INT
					{
						newLeafNode(lv_priority_2_0, grammarAccess.getSpecificationAccess().getPriorityINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSpecificationRule());
						}
						setWithLastConsumed(
							$current,
							"priority",
							lv_priority_2_0,
							"nii.bigclout.ecaadapter.Dsl.INT");
					}
				)
			)
		)?
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getSpecificationAccess().getOnKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_3_0());
				}
				lv_trigger_4_0=ruleTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"trigger",
						lv_trigger_4_0,
						"nii.bigclout.ecaadapter.Dsl.Trigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getSpecificationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_4_1_0());
					}
					lv_trigger_6_0=ruleTrigger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSpecificationRule());
						}
						add(
							$current,
							"trigger",
							lv_trigger_6_0,
							"nii.bigclout.ecaadapter.Dsl.Trigger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getIfdoIfDoSpecParserRuleCall_5_0());
				}
				lv_ifdo_7_0=ruleIfDoSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"ifdo",
						lv_ifdo_7_0,
						"nii.bigclout.ecaadapter.Dsl.IfDoSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getElseIfDoElseIfDoSpecParserRuleCall_6_0());
				}
				lv_elseIfDo_8_0=ruleElseIfDoSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					add(
						$current,
						"elseIfDo",
						lv_elseIfDo_8_0,
						"nii.bigclout.ecaadapter.Dsl.ElseIfDoSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSpecificationAccess().getElseDoElseDoSpecParserRuleCall_7_0());
				}
				lv_elseDo_9_0=ruleElseDoSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSpecificationRule());
					}
					set(
						$current,
						"elseDo",
						lv_elseDo_9_0,
						"nii.bigclout.ecaadapter.Dsl.ElseDoSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	iv_ruleTrigger=ruleTrigger
	{ $current=$iv_ruleTrigger.current; }
	EOF;

// Rule Trigger
ruleTrigger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTriggerRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getTriggerAccess().getResourceResourceCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getTriggerAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTriggerAccess().getStateStateParserRuleCall_2_0());
				}
				lv_state_3_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTriggerRule());
					}
					set(
						$current,
						"state",
						lv_state_3_0,
						"nii.bigclout.ecaadapter.Dsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfDoSpec
entryRuleIfDoSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfDoSpecRule()); }
	iv_ruleIfDoSpec=ruleIfDoSpec
	{ $current=$iv_ruleIfDoSpec.current; }
	EOF;

// Rule IfDoSpec
ruleIfDoSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfDoSpecAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfDoSpecAccess().getConditionOrElementParserRuleCall_1_0());
				}
				lv_condition_1_0=ruleOrElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfDoSpecRule());
					}
					set(
						$current,
						"condition",
						lv_condition_1_0,
						"nii.bigclout.ecaadapter.Dsl.OrElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfDoSpecAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_3_0());
				}
				lv_action_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfDoSpecRule());
					}
					add(
						$current,
						"action",
						lv_action_3_0,
						"nii.bigclout.ecaadapter.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='and'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfDoSpecAccess().getAndKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_4_1_0());
					}
					lv_action_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfDoSpecRule());
						}
						add(
							$current,
							"action",
							lv_action_5_0,
							"nii.bigclout.ecaadapter.Dsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleElseIfDoSpec
entryRuleElseIfDoSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseIfDoSpecRule()); }
	iv_ruleElseIfDoSpec=ruleElseIfDoSpec
	{ $current=$iv_ruleElseIfDoSpec.current; }
	EOF;

// Rule ElseIfDoSpec
ruleElseIfDoSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseIfDoSpecAccess().getElseKeyword_0());
		}
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseIfDoSpecAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfDoSpecAccess().getConditionOrElementParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleOrElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfDoSpecRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"nii.bigclout.ecaadapter.Dsl.OrElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='do'
		{
			newLeafNode(otherlv_3, grammarAccess.getElseIfDoSpecAccess().getDoKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_4_0());
				}
				lv_action_4_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseIfDoSpecRule());
					}
					add(
						$current,
						"action",
						lv_action_4_0,
						"nii.bigclout.ecaadapter.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='and'
			{
				newLeafNode(otherlv_5, grammarAccess.getElseIfDoSpecAccess().getAndKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_5_1_0());
					}
					lv_action_6_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElseIfDoSpecRule());
						}
						add(
							$current,
							"action",
							lv_action_6_0,
							"nii.bigclout.ecaadapter.Dsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleElseDoSpec
entryRuleElseDoSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseDoSpecRule()); }
	iv_ruleElseDoSpec=ruleElseDoSpec
	{ $current=$iv_ruleElseDoSpec.current; }
	EOF;

// Rule ElseDoSpec
ruleElseDoSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseDoSpecAccess().getElseKeyword_0());
		}
		otherlv_1='do'
		{
			newLeafNode(otherlv_1, grammarAccess.getElseDoSpecAccess().getDoKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_2_0());
				}
				lv_action_2_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElseDoSpecRule());
					}
					add(
						$current,
						"action",
						lv_action_2_0,
						"nii.bigclout.ecaadapter.Dsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='and'
			{
				newLeafNode(otherlv_3, grammarAccess.getElseDoSpecAccess().getAndKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_3_1_0());
					}
					lv_action_4_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElseDoSpecRule());
						}
						add(
							$current,
							"action",
							lv_action_4_0,
							"nii.bigclout.ecaadapter.Dsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEnvironmentMetaData
entryRuleEnvironmentMetaData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnvironmentMetaDataRule()); }
	iv_ruleEnvironmentMetaData=ruleEnvironmentMetaData
	{ $current=$iv_ruleEnvironmentMetaData.current; }
	EOF;

// Rule EnvironmentMetaData
ruleEnvironmentMetaData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentMetaDataAction_0(),
					$current);
			}
		)
		otherlv_1='environment'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getEnvironmentMetaDataAccess().getLBRACEParserRuleCall_2());
		}
		ruleLBRACE
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnvironmentMetaDataAccess().getResourcesResourceParserRuleCall_3_0());
				}
				lv_resources_3_0=ruleResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnvironmentMetaDataRule());
					}
					add(
						$current,
						"resources",
						lv_resources_3_0,
						"nii.bigclout.ecaadapter.Dsl.Resource");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		{
			newCompositeNode(grammarAccess.getEnvironmentMetaDataAccess().getRBRACEParserRuleCall_4());
		}
		ruleRBRACE
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getActionAccess().getResourceResourceCrossReference_0_0());
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getActionAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getStateStateParserRuleCall_2_0());
				}
				lv_state_2_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"state",
						lv_state_2_0,
						"nii.bigclout.ecaadapter.Dsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrElement
entryRuleOrElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrElementRule()); }
	iv_ruleOrElement=ruleOrElement
	{ $current=$iv_ruleOrElement.current; }
	EOF;

// Rule OrElement
ruleOrElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrElementAccess().getAndElementParserRuleCall_0());
		}
		this_AndElement_0=ruleAndElement
		{
			$current = $this_AndElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='or'
			{
				newLeafNode(otherlv_1, grammarAccess.getOrElementAccess().getOrKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrElementAccess().getOrElementLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrElementAccess().getRightAndElementParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrElementRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"nii.bigclout.ecaadapter.Dsl.AndElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndElement
entryRuleAndElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndElementRule()); }
	iv_ruleAndElement=ruleAndElement
	{ $current=$iv_ruleAndElement.current; }
	EOF;

// Rule AndElement
ruleAndElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndElementAccess().getDiffEqualElementParserRuleCall_0());
		}
		this_DiffEqualElement_0=ruleDiffEqualElement
		{
			$current = $this_DiffEqualElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getAndElementAccess().getAndKeyword_1_0());
			}
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndElementAccess().getAndElementLeftAction_1_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndElementAccess().getRightDiffEqualElementParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleDiffEqualElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndElementRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"nii.bigclout.ecaadapter.Dsl.DiffEqualElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDiffEqualElement
entryRuleDiffEqualElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiffEqualElementRule()); }
	iv_ruleDiffEqualElement=ruleDiffEqualElement
	{ $current=$iv_ruleDiffEqualElement.current; }
	EOF;

// Rule DiffEqualElement
ruleDiffEqualElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDiffEqualElementAccess().getCompareElementParserRuleCall_0());
		}
		this_CompareElement_0=ruleCompareElement
		{
			$current = $this_CompareElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='!='
				{
					newLeafNode(otherlv_1, grammarAccess.getDiffEqualElementAccess().getExclamationMarkEqualsSignKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getDiffEqualElementAccess().getDiffElementLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleCompareElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDiffEqualElementRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"nii.bigclout.ecaadapter.Dsl.CompareElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='=='
				{
					newLeafNode(otherlv_4, grammarAccess.getDiffEqualElementAccess().getEqualsSignEqualsSignKeyword_1_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getDiffEqualElementAccess().getEqualElementLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleCompareElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDiffEqualElementRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"nii.bigclout.ecaadapter.Dsl.CompareElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleCompareElement
entryRuleCompareElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareElementRule()); }
	iv_ruleCompareElement=ruleCompareElement
	{ $current=$iv_ruleCompareElement.current; }
	EOF;

// Rule CompareElement
ruleCompareElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareElementAccess().getPlusMinusElementParserRuleCall_0());
		}
		this_PlusMinusElement_0=rulePlusMinusElement
		{
			$current = $this_PlusMinusElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='>'
				{
					newLeafNode(otherlv_1, grammarAccess.getCompareElementAccess().getGreaterThanSignKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCompareElementAccess().getLargerElementLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=rulePlusMinusElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareElementRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"nii.bigclout.ecaadapter.Dsl.PlusMinusElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='>='
				{
					newLeafNode(otherlv_4, grammarAccess.getCompareElementAccess().getGreaterThanSignEqualsSignKeyword_1_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCompareElementAccess().getLargerEqualElementLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=rulePlusMinusElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareElementRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"nii.bigclout.ecaadapter.Dsl.PlusMinusElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='<'
				{
					newLeafNode(otherlv_7, grammarAccess.getCompareElementAccess().getLessThanSignKeyword_1_2_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCompareElementAccess().getSmallerElementLeftAction_1_2_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=rulePlusMinusElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareElementRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"nii.bigclout.ecaadapter.Dsl.PlusMinusElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_10='=<'
				{
					newLeafNode(otherlv_10, grammarAccess.getCompareElementAccess().getEqualsSignLessThanSignKeyword_1_3_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getCompareElementAccess().getSmallerEqualElementLeftAction_1_3_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_3_2_0());
						}
						lv_right_12_0=rulePlusMinusElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompareElementRule());
							}
							set(
								$current,
								"right",
								lv_right_12_0,
								"nii.bigclout.ecaadapter.Dsl.PlusMinusElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePlusMinusElement
entryRulePlusMinusElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusMinusElementRule()); }
	iv_rulePlusMinusElement=rulePlusMinusElement
	{ $current=$iv_rulePlusMinusElement.current; }
	EOF;

// Rule PlusMinusElement
rulePlusMinusElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusMinusElementAccess().getMultiplicationDivisionElementParserRuleCall_0());
		}
		this_MultiplicationDivisionElement_0=ruleMultiplicationDivisionElement
		{
			$current = $this_MultiplicationDivisionElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='+'
				{
					newLeafNode(otherlv_1, grammarAccess.getPlusMinusElementAccess().getPlusSignKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPlusMinusElementAccess().getPlusElementLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleMultiplicationDivisionElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlusMinusElementRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"nii.bigclout.ecaadapter.Dsl.MultiplicationDivisionElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='-'
				{
					newLeafNode(otherlv_4, grammarAccess.getPlusMinusElementAccess().getHyphenMinusKeyword_1_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPlusMinusElementAccess().getMinusElementLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleMultiplicationDivisionElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlusMinusElementRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"nii.bigclout.ecaadapter.Dsl.MultiplicationDivisionElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicationDivisionElement
entryRuleMultiplicationDivisionElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationDivisionElementRule()); }
	iv_ruleMultiplicationDivisionElement=ruleMultiplicationDivisionElement
	{ $current=$iv_ruleMultiplicationDivisionElement.current; }
	EOF;

// Rule MultiplicationDivisionElement
ruleMultiplicationDivisionElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationDivisionElementAccess().getUnaryElementParserRuleCall_0());
		}
		this_UnaryElement_0=ruleUnaryElement
		{
			$current = $this_UnaryElement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				otherlv_1='*'
				{
					newLeafNode(otherlv_1, grammarAccess.getMultiplicationDivisionElementAccess().getAsteriskKeyword_1_0_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationDivisionElementAccess().getMultiplicationElementLeftAction_1_0_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleUnaryElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiplicationDivisionElementRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"nii.bigclout.ecaadapter.Dsl.UnaryElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='/'
				{
					newLeafNode(otherlv_4, grammarAccess.getMultiplicationDivisionElementAccess().getSolidusKeyword_1_1_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationDivisionElementAccess().getDivisionElementLeftAction_1_1_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_1_2_0());
						}
						lv_right_6_0=ruleUnaryElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiplicationDivisionElementRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"nii.bigclout.ecaadapter.Dsl.UnaryElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_7='%'
				{
					newLeafNode(otherlv_7, grammarAccess.getMultiplicationDivisionElementAccess().getPercentSignKeyword_1_2_0());
				}
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getMultiplicationDivisionElementAccess().getModuloElementLeftAction_1_2_1(),
							$current);
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_2_2_0());
						}
						lv_right_9_0=ruleUnaryElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultiplicationDivisionElementRule());
							}
							set(
								$current,
								"right",
								lv_right_9_0,
								"nii.bigclout.ecaadapter.Dsl.UnaryElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryElement
entryRuleUnaryElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryElementRule()); }
	iv_ruleUnaryElement=ruleUnaryElement
	{ $current=$iv_ruleUnaryElement.current; }
	EOF;

// Rule UnaryElement
ruleUnaryElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryElementAccess().getNumber_ObjectAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryElementAccess().getValueNUMBERParserRuleCall_0_1_0());
					}
					lv_value_1_0=ruleNUMBER
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryElementRule());
						}
						set(
							$current,
							"value",
							lv_value_1_0,
							"nii.bigclout.ecaadapter.Dsl.NUMBER");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryElementAccess().getBoolean_ObjectAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_BOOLEAN
					{
						newLeafNode(lv_value_3_0, grammarAccess.getUnaryElementAccess().getValueBOOLEANTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryElementRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"nii.bigclout.ecaadapter.Dsl.BOOLEAN");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryElementAccess().getResource_ObjectAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryElementRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getUnaryElementAccess().getValueResourceCrossReference_2_1_0());
					}
				)
			)
			otherlv_6='.state'
			{
				newLeafNode(otherlv_6, grammarAccess.getUnaryElementAccess().getStateKeyword_2_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryElementAccess().getState_ObjectAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryElementAccess().getValueStateParserRuleCall_3_1_0());
					}
					lv_value_8_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryElementRule());
						}
						set(
							$current,
							"value",
							lv_value_8_0,
							"nii.bigclout.ecaadapter.Dsl.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_9='('
			{
				newLeafNode(otherlv_9, grammarAccess.getUnaryElementAccess().getLeftParenthesisKeyword_4_0());
			}
			{
				newCompositeNode(grammarAccess.getUnaryElementAccess().getOrElementParserRuleCall_4_1());
			}
			this_OrElement_10=ruleOrElement
			{
				$current = $this_OrElement_10.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getUnaryElementAccess().getRightParenthesisKeyword_4_2());
			}
		)
		    |
		(
			otherlv_12='not'
			{
				newLeafNode(otherlv_12, grammarAccess.getUnaryElementAccess().getNotKeyword_5_0());
			}
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryElementAccess().getNegateElementAction_5_1(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryElementAccess().getExpUnaryElementParserRuleCall_5_2_0());
					}
					lv_exp_14_0=ruleUnaryElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryElementRule());
						}
						set(
							$current,
							"exp",
							lv_exp_14_0,
							"nii.bigclout.ecaadapter.Dsl.UnaryElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLBRACE
entryRuleLBRACE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLBRACERule()); }
	iv_ruleLBRACE=ruleLBRACE
	{ $current=$iv_ruleLBRACE.current.getText(); }
	EOF;

// Rule LBRACE
ruleLBRACE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='{'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getLBRACEAccess().getLeftCurlyBracketKeyword());
	}
;

// Entry rule entryRuleRBRACE
entryRuleRBRACE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRBRACERule()); }
	iv_ruleRBRACE=ruleRBRACE
	{ $current=$iv_ruleRBRACE.current.getText(); }
	EOF;

// Rule RBRACE
ruleRBRACE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='}'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getRBRACEAccess().getRightCurlyBracketKeyword());
	}
;

// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); }
	iv_ruleNUMBER=ruleNUMBER
	{ $current=$iv_ruleNUMBER.current.getText(); }
	EOF;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0());
		}
		    |
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_0());
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_1_1());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_2());
			}
		)
	)
;

RULE_BOOLEAN : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|':'|'-')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
