/*
 * generated by Xtext 2.13.0.RC1
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package nii.bigclout.ecaadapter.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nii.bigclout.ecaadapter.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import nii.bigclout.ecaadapter.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRunTimeModel
entryRuleRunTimeModel
:
{ before(grammarAccess.getRunTimeModelRule()); }
	 ruleRunTimeModel
{ after(grammarAccess.getRunTimeModelRule()); } 
	 EOF 
;

// Rule RunTimeModel
ruleRunTimeModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunTimeModelAccess().getGroup()); }
		(rule__RunTimeModel__Group__0)
		{ after(grammarAccess.getRunTimeModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getNameAssignment()); }
		(rule__State__NameAssignment)
		{ after(grammarAccess.getStateAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResource
entryRuleResource
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceAccess().getGroup()); }
		(rule__Resource__Group__0)
		{ after(grammarAccess.getResourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAppMetaData
entryRuleAppMetaData
:
{ before(grammarAccess.getAppMetaDataRule()); }
	 ruleAppMetaData
{ after(grammarAccess.getAppMetaDataRule()); } 
	 EOF 
;

// Rule AppMetaData
ruleAppMetaData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAppMetaDataAccess().getGroup()); }
		(rule__AppMetaData__Group__0)
		{ after(grammarAccess.getAppMetaDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpecification
entryRuleSpecification
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecificationAccess().getGroup()); }
		(rule__Specification__Group__0)
		{ after(grammarAccess.getSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrigger
entryRuleTrigger
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerAccess().getGroup()); }
		(rule__Trigger__Group__0)
		{ after(grammarAccess.getTriggerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfDoSpec
entryRuleIfDoSpec
:
{ before(grammarAccess.getIfDoSpecRule()); }
	 ruleIfDoSpec
{ after(grammarAccess.getIfDoSpecRule()); } 
	 EOF 
;

// Rule IfDoSpec
ruleIfDoSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfDoSpecAccess().getGroup()); }
		(rule__IfDoSpec__Group__0)
		{ after(grammarAccess.getIfDoSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseIfDoSpec
entryRuleElseIfDoSpec
:
{ before(grammarAccess.getElseIfDoSpecRule()); }
	 ruleElseIfDoSpec
{ after(grammarAccess.getElseIfDoSpecRule()); } 
	 EOF 
;

// Rule ElseIfDoSpec
ruleElseIfDoSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseIfDoSpecAccess().getGroup()); }
		(rule__ElseIfDoSpec__Group__0)
		{ after(grammarAccess.getElseIfDoSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseDoSpec
entryRuleElseDoSpec
:
{ before(grammarAccess.getElseDoSpecRule()); }
	 ruleElseDoSpec
{ after(grammarAccess.getElseDoSpecRule()); } 
	 EOF 
;

// Rule ElseDoSpec
ruleElseDoSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseDoSpecAccess().getGroup()); }
		(rule__ElseDoSpec__Group__0)
		{ after(grammarAccess.getElseDoSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentMetaData
entryRuleEnvironmentMetaData
:
{ before(grammarAccess.getEnvironmentMetaDataRule()); }
	 ruleEnvironmentMetaData
{ after(grammarAccess.getEnvironmentMetaDataRule()); } 
	 EOF 
;

// Rule EnvironmentMetaData
ruleEnvironmentMetaData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentMetaDataAccess().getGroup()); }
		(rule__EnvironmentMetaData__Group__0)
		{ after(grammarAccess.getEnvironmentMetaDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrElement
entryRuleOrElement
:
{ before(grammarAccess.getOrElementRule()); }
	 ruleOrElement
{ after(grammarAccess.getOrElementRule()); } 
	 EOF 
;

// Rule OrElement
ruleOrElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrElementAccess().getGroup()); }
		(rule__OrElement__Group__0)
		{ after(grammarAccess.getOrElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndElement
entryRuleAndElement
:
{ before(grammarAccess.getAndElementRule()); }
	 ruleAndElement
{ after(grammarAccess.getAndElementRule()); } 
	 EOF 
;

// Rule AndElement
ruleAndElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndElementAccess().getGroup()); }
		(rule__AndElement__Group__0)
		{ after(grammarAccess.getAndElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiffEqualElement
entryRuleDiffEqualElement
:
{ before(grammarAccess.getDiffEqualElementRule()); }
	 ruleDiffEqualElement
{ after(grammarAccess.getDiffEqualElementRule()); } 
	 EOF 
;

// Rule DiffEqualElement
ruleDiffEqualElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDiffEqualElementAccess().getGroup()); }
		(rule__DiffEqualElement__Group__0)
		{ after(grammarAccess.getDiffEqualElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareElement
entryRuleCompareElement
:
{ before(grammarAccess.getCompareElementRule()); }
	 ruleCompareElement
{ after(grammarAccess.getCompareElementRule()); } 
	 EOF 
;

// Rule CompareElement
ruleCompareElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareElementAccess().getGroup()); }
		(rule__CompareElement__Group__0)
		{ after(grammarAccess.getCompareElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinusElement
entryRulePlusMinusElement
:
{ before(grammarAccess.getPlusMinusElementRule()); }
	 rulePlusMinusElement
{ after(grammarAccess.getPlusMinusElementRule()); } 
	 EOF 
;

// Rule PlusMinusElement
rulePlusMinusElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusElementAccess().getGroup()); }
		(rule__PlusMinusElement__Group__0)
		{ after(grammarAccess.getPlusMinusElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicationDivisionElement
entryRuleMultiplicationDivisionElement
:
{ before(grammarAccess.getMultiplicationDivisionElementRule()); }
	 ruleMultiplicationDivisionElement
{ after(grammarAccess.getMultiplicationDivisionElementRule()); } 
	 EOF 
;

// Rule MultiplicationDivisionElement
ruleMultiplicationDivisionElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getGroup()); }
		(rule__MultiplicationDivisionElement__Group__0)
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryElement
entryRuleUnaryElement
:
{ before(grammarAccess.getUnaryElementRule()); }
	 ruleUnaryElement
{ after(grammarAccess.getUnaryElementRule()); } 
	 EOF 
;

// Rule UnaryElement
ruleUnaryElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryElementAccess().getAlternatives()); }
		(rule__UnaryElement__Alternatives)
		{ after(grammarAccess.getUnaryElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLBRACE
entryRuleLBRACE
:
{ before(grammarAccess.getLBRACERule()); }
	 ruleLBRACE
{ after(grammarAccess.getLBRACERule()); } 
	 EOF 
;

// Rule LBRACE
ruleLBRACE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLBRACEAccess().getLeftCurlyBracketKeyword()); }
		'{'
		{ after(grammarAccess.getLBRACEAccess().getLeftCurlyBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRBRACE
entryRuleRBRACE
:
{ before(grammarAccess.getRBRACERule()); }
	 ruleRBRACE
{ after(grammarAccess.getRBRACERule()); } 
	 EOF 
;

// Rule RBRACE
ruleRBRACE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRBRACEAccess().getRightCurlyBracketKeyword()); }
		'}'
		{ after(grammarAccess.getRBRACEAccess().getRightCurlyBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNUMBER
entryRuleNUMBER
:
{ before(grammarAccess.getNUMBERRule()); }
	 ruleNUMBER
{ after(grammarAccess.getNUMBERRule()); } 
	 EOF 
;

// Rule NUMBER
ruleNUMBER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNUMBERAccess().getAlternatives()); }
		(rule__NUMBER__Alternatives)
		{ after(grammarAccess.getNUMBERAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getIsKeyword_1_0()); }
		'is'
		{ after(grammarAccess.getTriggerAccess().getIsKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTriggerAccess().getAreKeyword_1_1()); }
		'are'
		{ after(grammarAccess.getTriggerAccess().getAreKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiffEqualElementAccess().getGroup_1_0()); }
		(rule__DiffEqualElement__Group_1_0__0)
		{ after(grammarAccess.getDiffEqualElementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDiffEqualElementAccess().getGroup_1_1()); }
		(rule__DiffEqualElement__Group_1_1__0)
		{ after(grammarAccess.getDiffEqualElementAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareElementAccess().getGroup_1_0()); }
		(rule__CompareElement__Group_1_0__0)
		{ after(grammarAccess.getCompareElementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareElementAccess().getGroup_1_1()); }
		(rule__CompareElement__Group_1_1__0)
		{ after(grammarAccess.getCompareElementAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareElementAccess().getGroup_1_2()); }
		(rule__CompareElement__Group_1_2__0)
		{ after(grammarAccess.getCompareElementAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareElementAccess().getGroup_1_3()); }
		(rule__CompareElement__Group_1_3__0)
		{ after(grammarAccess.getCompareElementAccess().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusElementAccess().getGroup_1_0()); }
		(rule__PlusMinusElement__Group_1_0__0)
		{ after(grammarAccess.getPlusMinusElementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusMinusElementAccess().getGroup_1_1()); }
		(rule__PlusMinusElement__Group_1_1__0)
		{ after(grammarAccess.getPlusMinusElementAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_0()); }
		(rule__MultiplicationDivisionElement__Group_1_0__0)
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_1()); }
		(rule__MultiplicationDivisionElement__Group_1_1__0)
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_2()); }
		(rule__MultiplicationDivisionElement__Group_1_2__0)
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_0()); }
		(rule__UnaryElement__Group_0__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_1()); }
		(rule__UnaryElement__Group_1__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_2()); }
		(rule__UnaryElement__Group_2__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_3()); }
		(rule__UnaryElement__Group_3__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_4()); }
		(rule__UnaryElement__Group_4__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryElementAccess().getGroup_5()); }
		(rule__UnaryElement__Group_5__0)
		{ after(grammarAccess.getUnaryElementAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNUMBERAccess().getGroup_1()); }
		(rule__NUMBER__Group_1__0)
		{ after(grammarAccess.getNUMBERAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunTimeModel__Group__0__Impl
	rule__RunTimeModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunTimeModelAccess().getRunTimeModelAction_0()); }
	()
	{ after(grammarAccess.getRunTimeModelAccess().getRunTimeModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunTimeModel__Group__1__Impl
	rule__RunTimeModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunTimeModelAccess().getEnvDataAssignment_1()); }
	(rule__RunTimeModel__EnvDataAssignment_1)
	{ after(grammarAccess.getRunTimeModelAccess().getEnvDataAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RunTimeModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunTimeModelAccess().getAppDataAssignment_2()); }
	(rule__RunTimeModel__AppDataAssignment_2)
	{ after(grammarAccess.getRunTimeModelAccess().getAppDataAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
	'resource'
	{ after(grammarAccess.getResourceAccess().getResourceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__1__Impl
	rule__Resource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getNameAssignment_1()); }
	(rule__Resource__NameAssignment_1)
	{ after(grammarAccess.getResourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getGroup_2()); }
	(rule__Resource__Group_2__0)?
	{ after(grammarAccess.getResourceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2__0__Impl
	rule__Resource__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getCanKeyword_2_0()); }
	'can'
	{ after(grammarAccess.getResourceAccess().getCanKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2__1__Impl
	rule__Resource__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getBeKeyword_2_1()); }
	'be'
	{ after(grammarAccess.getResourceAccess().getBeKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2__2__Impl
	rule__Resource__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getStatesAssignment_2_2()); }
	(rule__Resource__StatesAssignment_2_2)
	{ after(grammarAccess.getResourceAccess().getStatesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getGroup_2_3()); }
	(rule__Resource__Group_2_3__0)*
	{ after(grammarAccess.getResourceAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2_3__0__Impl
	rule__Resource__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getResourceAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getStatesAssignment_2_3_1()); }
	(rule__Resource__StatesAssignment_2_3_1)
	{ after(grammarAccess.getResourceAccess().getStatesAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AppMetaData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppMetaData__Group__0__Impl
	rule__AppMetaData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppMetaDataAccess().getAppKeyword_0()); }
	'app'
	{ after(grammarAccess.getAppMetaDataAccess().getAppKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppMetaData__Group__1__Impl
	rule__AppMetaData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppMetaDataAccess().getAppIDAssignment_1()); }
	(rule__AppMetaData__AppIDAssignment_1)
	{ after(grammarAccess.getAppMetaDataAccess().getAppIDAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppMetaData__Group__2__Impl
	rule__AppMetaData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppMetaDataAccess().getLBRACEParserRuleCall_2()); }
	ruleLBRACE
	{ after(grammarAccess.getAppMetaDataAccess().getLBRACEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppMetaData__Group__3__Impl
	rule__AppMetaData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppMetaDataAccess().getSpecificationAssignment_3()); }
	(rule__AppMetaData__SpecificationAssignment_3)
	{ after(grammarAccess.getAppMetaDataAccess().getSpecificationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AppMetaData__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAppMetaDataAccess().getRBRACEParserRuleCall_4()); }
	ruleRBRACE
	{ after(grammarAccess.getAppMetaDataAccess().getRBRACEParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__0__Impl
	rule__Specification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getSpecIDAssignment_0()); }
	(rule__Specification__SpecIDAssignment_0)?
	{ after(grammarAccess.getSpecificationAccess().getSpecIDAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__1__Impl
	rule__Specification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getGroup_1()); }
	(rule__Specification__Group_1__0)?
	{ after(grammarAccess.getSpecificationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__2__Impl
	rule__Specification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getOnKeyword_2()); }
	'on'
	{ after(grammarAccess.getSpecificationAccess().getOnKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__3__Impl
	rule__Specification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getTriggerAssignment_3()); }
	(rule__Specification__TriggerAssignment_3)
	{ after(grammarAccess.getSpecificationAccess().getTriggerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__4__Impl
	rule__Specification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getGroup_4()); }
	(rule__Specification__Group_4__0)*
	{ after(grammarAccess.getSpecificationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__5__Impl
	rule__Specification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getIfdoAssignment_5()); }
	(rule__Specification__IfdoAssignment_5)
	{ after(grammarAccess.getSpecificationAccess().getIfdoAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__6__Impl
	rule__Specification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getElseIfDoAssignment_6()); }
	(rule__Specification__ElseIfDoAssignment_6)*
	{ after(grammarAccess.getSpecificationAccess().getElseIfDoAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getElseDoAssignment_7()); }
	(rule__Specification__ElseDoAssignment_7)?
	{ after(grammarAccess.getSpecificationAccess().getElseDoAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group_1__0__Impl
	rule__Specification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getPriorityKeyword_1_0()); }
	'priority'
	{ after(grammarAccess.getSpecificationAccess().getPriorityKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getPriorityAssignment_1_1()); }
	(rule__Specification__PriorityAssignment_1_1)
	{ after(grammarAccess.getSpecificationAccess().getPriorityAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group_4__0__Impl
	rule__Specification__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSpecificationAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Specification__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpecificationAccess().getTriggerAssignment_4_1()); }
	(rule__Specification__TriggerAssignment_4_1)
	{ after(grammarAccess.getSpecificationAccess().getTriggerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getResourceAssignment_0()); }
	(rule__Trigger__ResourceAssignment_0)
	{ after(grammarAccess.getTriggerAccess().getResourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getAlternatives_1()); }
	(rule__Trigger__Alternatives_1)
	{ after(grammarAccess.getTriggerAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Trigger__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerAccess().getStateAssignment_2()); }
	(rule__Trigger__StateAssignment_2)
	{ after(grammarAccess.getTriggerAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfDoSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group__0__Impl
	rule__IfDoSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfDoSpecAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group__1__Impl
	rule__IfDoSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getConditionAssignment_1()); }
	(rule__IfDoSpec__ConditionAssignment_1)
	{ after(grammarAccess.getIfDoSpecAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group__2__Impl
	rule__IfDoSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getIfDoSpecAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group__3__Impl
	rule__IfDoSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getActionAssignment_3()); }
	(rule__IfDoSpec__ActionAssignment_3)
	{ after(grammarAccess.getIfDoSpecAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getGroup_4()); }
	(rule__IfDoSpec__Group_4__0)*
	{ after(grammarAccess.getIfDoSpecAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfDoSpec__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group_4__0__Impl
	rule__IfDoSpec__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getAndKeyword_4_0()); }
	'and'
	{ after(grammarAccess.getIfDoSpecAccess().getAndKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfDoSpec__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfDoSpecAccess().getActionAssignment_4_1()); }
	(rule__IfDoSpec__ActionAssignment_4_1)
	{ after(grammarAccess.getIfDoSpecAccess().getActionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfDoSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__0__Impl
	rule__ElseIfDoSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseIfDoSpecAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__1__Impl
	rule__ElseIfDoSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getElseIfDoSpecAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__2__Impl
	rule__ElseIfDoSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getConditionAssignment_2()); }
	(rule__ElseIfDoSpec__ConditionAssignment_2)
	{ after(grammarAccess.getElseIfDoSpecAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__3__Impl
	rule__ElseIfDoSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getDoKeyword_3()); }
	'do'
	{ after(grammarAccess.getElseIfDoSpecAccess().getDoKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__4__Impl
	rule__ElseIfDoSpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getActionAssignment_4()); }
	(rule__ElseIfDoSpec__ActionAssignment_4)
	{ after(grammarAccess.getElseIfDoSpecAccess().getActionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getGroup_5()); }
	(rule__ElseIfDoSpec__Group_5__0)*
	{ after(grammarAccess.getElseIfDoSpecAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfDoSpec__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group_5__0__Impl
	rule__ElseIfDoSpec__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getAndKeyword_5_0()); }
	'and'
	{ after(grammarAccess.getElseIfDoSpecAccess().getAndKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfDoSpec__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfDoSpecAccess().getActionAssignment_5_1()); }
	(rule__ElseIfDoSpec__ActionAssignment_5_1)
	{ after(grammarAccess.getElseIfDoSpecAccess().getActionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseDoSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group__0__Impl
	rule__ElseDoSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseDoSpecAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group__1__Impl
	rule__ElseDoSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getDoKeyword_1()); }
	'do'
	{ after(grammarAccess.getElseDoSpecAccess().getDoKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group__2__Impl
	rule__ElseDoSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getActionAssignment_2()); }
	(rule__ElseDoSpec__ActionAssignment_2)
	{ after(grammarAccess.getElseDoSpecAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getGroup_3()); }
	(rule__ElseDoSpec__Group_3__0)*
	{ after(grammarAccess.getElseDoSpecAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseDoSpec__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group_3__0__Impl
	rule__ElseDoSpec__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getAndKeyword_3_0()); }
	'and'
	{ after(grammarAccess.getElseDoSpecAccess().getAndKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseDoSpec__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseDoSpecAccess().getActionAssignment_3_1()); }
	(rule__ElseDoSpec__ActionAssignment_3_1)
	{ after(grammarAccess.getElseDoSpecAccess().getActionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentMetaData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentMetaData__Group__0__Impl
	rule__EnvironmentMetaData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentMetaDataAction_0()); }
	()
	{ after(grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentMetaDataAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentMetaData__Group__1__Impl
	rule__EnvironmentMetaData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentKeyword_1()); }
	'environment'
	{ after(grammarAccess.getEnvironmentMetaDataAccess().getEnvironmentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentMetaData__Group__2__Impl
	rule__EnvironmentMetaData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentMetaDataAccess().getLBRACEParserRuleCall_2()); }
	ruleLBRACE
	{ after(grammarAccess.getEnvironmentMetaDataAccess().getLBRACEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentMetaData__Group__3__Impl
	rule__EnvironmentMetaData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnvironmentMetaDataAccess().getResourcesAssignment_3()); }
		(rule__EnvironmentMetaData__ResourcesAssignment_3)
		{ after(grammarAccess.getEnvironmentMetaDataAccess().getResourcesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getEnvironmentMetaDataAccess().getResourcesAssignment_3()); }
		(rule__EnvironmentMetaData__ResourcesAssignment_3)*
		{ after(grammarAccess.getEnvironmentMetaDataAccess().getResourcesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentMetaData__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentMetaDataAccess().getRBRACEParserRuleCall_4()); }
	ruleRBRACE
	{ after(grammarAccess.getEnvironmentMetaDataAccess().getRBRACEParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getResourceAssignment_0()); }
	(rule__Action__ResourceAssignment_0)
	{ after(grammarAccess.getActionAccess().getResourceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getActionAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getStateAssignment_2()); }
	(rule__Action__StateAssignment_2)
	{ after(grammarAccess.getActionAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrElement__Group__0__Impl
	rule__OrElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrElementAccess().getAndElementParserRuleCall_0()); }
	ruleAndElement
	{ after(grammarAccess.getOrElementAccess().getAndElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrElementAccess().getGroup_1()); }
	(rule__OrElement__Group_1__0)*
	{ after(grammarAccess.getOrElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrElement__Group_1__0__Impl
	rule__OrElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrElementAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getOrElementAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrElement__Group_1__1__Impl
	rule__OrElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrElementAccess().getOrElementLeftAction_1_1()); }
	()
	{ after(grammarAccess.getOrElementAccess().getOrElementLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrElementAccess().getRightAssignment_1_2()); }
	(rule__OrElement__RightAssignment_1_2)
	{ after(grammarAccess.getOrElementAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndElement__Group__0__Impl
	rule__AndElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndElementAccess().getDiffEqualElementParserRuleCall_0()); }
	ruleDiffEqualElement
	{ after(grammarAccess.getAndElementAccess().getDiffEqualElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndElementAccess().getGroup_1()); }
	(rule__AndElement__Group_1__0)*
	{ after(grammarAccess.getAndElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndElement__Group_1__0__Impl
	rule__AndElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndElementAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getAndElementAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndElement__Group_1__1__Impl
	rule__AndElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndElementAccess().getAndElementLeftAction_1_1()); }
	()
	{ after(grammarAccess.getAndElementAccess().getAndElementLeftAction_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndElementAccess().getRightAssignment_1_2()); }
	(rule__AndElement__RightAssignment_1_2)
	{ after(grammarAccess.getAndElementAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiffEqualElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group__0__Impl
	rule__DiffEqualElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getCompareElementParserRuleCall_0()); }
	ruleCompareElement
	{ after(grammarAccess.getDiffEqualElementAccess().getCompareElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getAlternatives_1()); }
	(rule__DiffEqualElement__Alternatives_1)*
	{ after(grammarAccess.getDiffEqualElementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiffEqualElement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_0__0__Impl
	rule__DiffEqualElement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getExclamationMarkEqualsSignKeyword_1_0_0()); }
	'!='
	{ after(grammarAccess.getDiffEqualElementAccess().getExclamationMarkEqualsSignKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_0__1__Impl
	rule__DiffEqualElement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getDiffElementLeftAction_1_0_1()); }
	()
	{ after(grammarAccess.getDiffEqualElementAccess().getDiffElementLeftAction_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getRightAssignment_1_0_2()); }
	(rule__DiffEqualElement__RightAssignment_1_0_2)
	{ after(grammarAccess.getDiffEqualElementAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DiffEqualElement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_1__0__Impl
	rule__DiffEqualElement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getEqualsSignEqualsSignKeyword_1_1_0()); }
	'=='
	{ after(grammarAccess.getDiffEqualElementAccess().getEqualsSignEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_1__1__Impl
	rule__DiffEqualElement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getEqualElementLeftAction_1_1_1()); }
	()
	{ after(grammarAccess.getDiffEqualElementAccess().getEqualElementLeftAction_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DiffEqualElement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDiffEqualElementAccess().getRightAssignment_1_1_2()); }
	(rule__DiffEqualElement__RightAssignment_1_1_2)
	{ after(grammarAccess.getDiffEqualElementAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group__0__Impl
	rule__CompareElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getPlusMinusElementParserRuleCall_0()); }
	rulePlusMinusElement
	{ after(grammarAccess.getCompareElementAccess().getPlusMinusElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getAlternatives_1()); }
	(rule__CompareElement__Alternatives_1)*
	{ after(grammarAccess.getCompareElementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareElement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_0__0__Impl
	rule__CompareElement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getGreaterThanSignKeyword_1_0_0()); }
	'>'
	{ after(grammarAccess.getCompareElementAccess().getGreaterThanSignKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_0__1__Impl
	rule__CompareElement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getLargerElementLeftAction_1_0_1()); }
	()
	{ after(grammarAccess.getCompareElementAccess().getLargerElementLeftAction_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getRightAssignment_1_0_2()); }
	(rule__CompareElement__RightAssignment_1_0_2)
	{ after(grammarAccess.getCompareElementAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareElement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_1__0__Impl
	rule__CompareElement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getGreaterThanSignEqualsSignKeyword_1_1_0()); }
	'>='
	{ after(grammarAccess.getCompareElementAccess().getGreaterThanSignEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_1__1__Impl
	rule__CompareElement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getLargerEqualElementLeftAction_1_1_1()); }
	()
	{ after(grammarAccess.getCompareElementAccess().getLargerEqualElementLeftAction_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getRightAssignment_1_1_2()); }
	(rule__CompareElement__RightAssignment_1_1_2)
	{ after(grammarAccess.getCompareElementAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareElement__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_2__0__Impl
	rule__CompareElement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getLessThanSignKeyword_1_2_0()); }
	'<'
	{ after(grammarAccess.getCompareElementAccess().getLessThanSignKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_2__1__Impl
	rule__CompareElement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getSmallerElementLeftAction_1_2_1()); }
	()
	{ after(grammarAccess.getCompareElementAccess().getSmallerElementLeftAction_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getRightAssignment_1_2_2()); }
	(rule__CompareElement__RightAssignment_1_2_2)
	{ after(grammarAccess.getCompareElementAccess().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareElement__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_3__0__Impl
	rule__CompareElement__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getEqualsSignLessThanSignKeyword_1_3_0()); }
	'=<'
	{ after(grammarAccess.getCompareElementAccess().getEqualsSignLessThanSignKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_3__1__Impl
	rule__CompareElement__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getSmallerEqualElementLeftAction_1_3_1()); }
	()
	{ after(grammarAccess.getCompareElementAccess().getSmallerEqualElementLeftAction_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareElement__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareElementAccess().getRightAssignment_1_3_2()); }
	(rule__CompareElement__RightAssignment_1_3_2)
	{ after(grammarAccess.getCompareElementAccess().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinusElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group__0__Impl
	rule__PlusMinusElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getMultiplicationDivisionElementParserRuleCall_0()); }
	ruleMultiplicationDivisionElement
	{ after(grammarAccess.getPlusMinusElementAccess().getMultiplicationDivisionElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getAlternatives_1()); }
	(rule__PlusMinusElement__Alternatives_1)*
	{ after(grammarAccess.getPlusMinusElementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinusElement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_0__0__Impl
	rule__PlusMinusElement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getPlusSignKeyword_1_0_0()); }
	'+'
	{ after(grammarAccess.getPlusMinusElementAccess().getPlusSignKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_0__1__Impl
	rule__PlusMinusElement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getPlusElementLeftAction_1_0_1()); }
	()
	{ after(grammarAccess.getPlusMinusElementAccess().getPlusElementLeftAction_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getRightAssignment_1_0_2()); }
	(rule__PlusMinusElement__RightAssignment_1_0_2)
	{ after(grammarAccess.getPlusMinusElementAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinusElement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_1__0__Impl
	rule__PlusMinusElement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getHyphenMinusKeyword_1_1_0()); }
	'-'
	{ after(grammarAccess.getPlusMinusElementAccess().getHyphenMinusKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_1__1__Impl
	rule__PlusMinusElement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getMinusElementLeftAction_1_1_1()); }
	()
	{ after(grammarAccess.getPlusMinusElementAccess().getMinusElementLeftAction_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinusElement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusElementAccess().getRightAssignment_1_1_2()); }
	(rule__PlusMinusElement__RightAssignment_1_1_2)
	{ after(grammarAccess.getPlusMinusElementAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivisionElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group__0__Impl
	rule__MultiplicationDivisionElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getUnaryElementParserRuleCall_0()); }
	ruleUnaryElement
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getUnaryElementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getAlternatives_1()); }
	(rule__MultiplicationDivisionElement__Alternatives_1)*
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivisionElement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_0__0__Impl
	rule__MultiplicationDivisionElement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getAsteriskKeyword_1_0_0()); }
	'*'
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getAsteriskKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_0__1__Impl
	rule__MultiplicationDivisionElement__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getMultiplicationElementLeftAction_1_0_1()); }
	()
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getMultiplicationElementLeftAction_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_0_2()); }
	(rule__MultiplicationDivisionElement__RightAssignment_1_0_2)
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivisionElement__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_1__0__Impl
	rule__MultiplicationDivisionElement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getSolidusKeyword_1_1_0()); }
	'/'
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getSolidusKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_1__1__Impl
	rule__MultiplicationDivisionElement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getDivisionElementLeftAction_1_1_1()); }
	()
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getDivisionElementLeftAction_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_1_2()); }
	(rule__MultiplicationDivisionElement__RightAssignment_1_1_2)
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicationDivisionElement__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_2__0__Impl
	rule__MultiplicationDivisionElement__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getPercentSignKeyword_1_2_0()); }
	'%'
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getPercentSignKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_2__1__Impl
	rule__MultiplicationDivisionElement__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getModuloElementLeftAction_1_2_1()); }
	()
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getModuloElementLeftAction_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicationDivisionElement__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_2_2()); }
	(rule__MultiplicationDivisionElement__RightAssignment_1_2_2)
	{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_0__0__Impl
	rule__UnaryElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getNumber_ObjectAction_0_0()); }
	()
	{ after(grammarAccess.getUnaryElementAccess().getNumber_ObjectAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getValueAssignment_0_1()); }
	(rule__UnaryElement__ValueAssignment_0_1)
	{ after(grammarAccess.getUnaryElementAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_1__0__Impl
	rule__UnaryElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getBoolean_ObjectAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryElementAccess().getBoolean_ObjectAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getValueAssignment_1_1()); }
	(rule__UnaryElement__ValueAssignment_1_1)
	{ after(grammarAccess.getUnaryElementAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_2__0__Impl
	rule__UnaryElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getResource_ObjectAction_2_0()); }
	()
	{ after(grammarAccess.getUnaryElementAccess().getResource_ObjectAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_2__1__Impl
	rule__UnaryElement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getValueAssignment_2_1()); }
	(rule__UnaryElement__ValueAssignment_2_1)
	{ after(grammarAccess.getUnaryElementAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getStateKeyword_2_2()); }
	'.state'
	{ after(grammarAccess.getUnaryElementAccess().getStateKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_3__0__Impl
	rule__UnaryElement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getState_ObjectAction_3_0()); }
	()
	{ after(grammarAccess.getUnaryElementAccess().getState_ObjectAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getValueAssignment_3_1()); }
	(rule__UnaryElement__ValueAssignment_3_1)
	{ after(grammarAccess.getUnaryElementAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_4__0__Impl
	rule__UnaryElement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getUnaryElementAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_4__1__Impl
	rule__UnaryElement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getOrElementParserRuleCall_4_1()); }
	ruleOrElement
	{ after(grammarAccess.getUnaryElementAccess().getOrElementParserRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getUnaryElementAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_5__0__Impl
	rule__UnaryElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getNotKeyword_5_0()); }
	'not'
	{ after(grammarAccess.getUnaryElementAccess().getNotKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_5__1__Impl
	rule__UnaryElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getNegateElementAction_5_1()); }
	()
	{ after(grammarAccess.getUnaryElementAccess().getNegateElementAction_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryElementAccess().getExpAssignment_5_2()); }
	(rule__UnaryElement__ExpAssignment_5_2)
	{ after(grammarAccess.getUnaryElementAccess().getExpAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NUMBER__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group_1__0__Impl
	rule__NUMBER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_0()); }
	RULE_INT
	{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group_1__1__Impl
	rule__NUMBER__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getNUMBERAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NUMBER__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NUMBER__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
	{ after(grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RunTimeModel__EnvDataAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunTimeModelAccess().getEnvDataEnvironmentMetaDataParserRuleCall_1_0()); }
		ruleEnvironmentMetaData
		{ after(grammarAccess.getRunTimeModelAccess().getEnvDataEnvironmentMetaDataParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RunTimeModel__AppDataAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunTimeModelAccess().getAppDataAppMetaDataParserRuleCall_2_0()); }
		ruleAppMetaData
		{ after(grammarAccess.getRunTimeModelAccess().getAppDataAppMetaDataParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__StatesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_2_0()); }
		ruleState
		{ after(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__StatesAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_3_1_0()); }
		ruleState
		{ after(grammarAccess.getResourceAccess().getStatesStateParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__AppIDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppMetaDataAccess().getAppIDIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAppMetaDataAccess().getAppIDIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AppMetaData__SpecificationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAppMetaDataAccess().getSpecificationSpecificationParserRuleCall_3_0()); }
		ruleSpecification
		{ after(grammarAccess.getAppMetaDataAccess().getSpecificationSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__SpecIDAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecIDIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSpecificationAccess().getSpecIDIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__PriorityAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getPriorityINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSpecificationAccess().getPriorityINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__TriggerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_3_0()); }
		ruleTrigger
		{ after(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__TriggerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_4_1_0()); }
		ruleTrigger
		{ after(grammarAccess.getSpecificationAccess().getTriggerTriggerParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__IfdoAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getIfdoIfDoSpecParserRuleCall_5_0()); }
		ruleIfDoSpec
		{ after(grammarAccess.getSpecificationAccess().getIfdoIfDoSpecParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__ElseIfDoAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getElseIfDoElseIfDoSpecParserRuleCall_6_0()); }
		ruleElseIfDoSpec
		{ after(grammarAccess.getSpecificationAccess().getElseIfDoElseIfDoSpecParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__ElseDoAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getElseDoElseDoSpecParserRuleCall_7_0()); }
		ruleElseDoSpec
		{ after(grammarAccess.getSpecificationAccess().getElseDoElseDoSpecParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ResourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getResourceResourceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTriggerAccess().getResourceResourceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTriggerAccess().getResourceResourceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTriggerAccess().getResourceResourceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerAccess().getStateStateParserRuleCall_2_0()); }
		ruleState
		{ after(grammarAccess.getTriggerAccess().getStateStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfDoSpecAccess().getConditionOrElementParserRuleCall_1_0()); }
		ruleOrElement
		{ after(grammarAccess.getIfDoSpecAccess().getConditionOrElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_3_0()); }
		ruleAction
		{ after(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfDoSpec__ActionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_4_1_0()); }
		ruleAction
		{ after(grammarAccess.getIfDoSpecAccess().getActionActionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfDoSpecAccess().getConditionOrElementParserRuleCall_2_0()); }
		ruleOrElement
		{ after(grammarAccess.getElseIfDoSpecAccess().getConditionOrElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__ActionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_4_0()); }
		ruleAction
		{ after(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfDoSpec__ActionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_5_1_0()); }
		ruleAction
		{ after(grammarAccess.getElseIfDoSpecAccess().getActionActionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_2_0()); }
		ruleAction
		{ after(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseDoSpec__ActionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_3_1_0()); }
		ruleAction
		{ after(grammarAccess.getElseDoSpecAccess().getActionActionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentMetaData__ResourcesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentMetaDataAccess().getResourcesResourceParserRuleCall_3_0()); }
		ruleResource
		{ after(grammarAccess.getEnvironmentMetaDataAccess().getResourcesResourceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ResourceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getResourceResourceCrossReference_0_0()); }
		(
			{ before(grammarAccess.getActionAccess().getResourceResourceIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionAccess().getResourceResourceIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getActionAccess().getResourceResourceCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getStateStateParserRuleCall_2_0()); }
		ruleState
		{ after(grammarAccess.getActionAccess().getStateStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrElement__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrElementAccess().getRightAndElementParserRuleCall_1_2_0()); }
		ruleAndElement
		{ after(grammarAccess.getOrElementAccess().getRightAndElementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndElement__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndElementAccess().getRightDiffEqualElementParserRuleCall_1_2_0()); }
		ruleDiffEqualElement
		{ after(grammarAccess.getAndElementAccess().getRightDiffEqualElementParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_0_2_0()); }
		ruleCompareElement
		{ after(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DiffEqualElement__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_1_2_0()); }
		ruleCompareElement
		{ after(grammarAccess.getDiffEqualElementAccess().getRightCompareElementParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_0_2_0()); }
		rulePlusMinusElement
		{ after(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_1_2_0()); }
		rulePlusMinusElement
		{ after(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_2_2_0()); }
		rulePlusMinusElement
		{ after(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareElement__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_3_2_0()); }
		rulePlusMinusElement
		{ after(grammarAccess.getCompareElementAccess().getRightPlusMinusElementParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_0_2_0()); }
		ruleMultiplicationDivisionElement
		{ after(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinusElement__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_1_2_0()); }
		ruleMultiplicationDivisionElement
		{ after(grammarAccess.getPlusMinusElementAccess().getRightMultiplicationDivisionElementParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_0_2_0()); }
		ruleUnaryElement
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_1_2_0()); }
		ruleUnaryElement
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicationDivisionElement__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_2_2_0()); }
		ruleUnaryElement
		{ after(grammarAccess.getMultiplicationDivisionElementAccess().getRightUnaryElementParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getValueNUMBERParserRuleCall_0_1_0()); }
		ruleNUMBER
		{ after(grammarAccess.getUnaryElementAccess().getValueNUMBERParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getValueBOOLEANTerminalRuleCall_1_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getUnaryElementAccess().getValueBOOLEANTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getValueResourceCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getUnaryElementAccess().getValueResourceIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnaryElementAccess().getValueResourceIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getUnaryElementAccess().getValueResourceCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getValueStateParserRuleCall_3_1_0()); }
		ruleState
		{ after(grammarAccess.getUnaryElementAccess().getValueStateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryElement__ExpAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryElementAccess().getExpUnaryElementParserRuleCall_5_2_0()); }
		ruleUnaryElement
		{ after(grammarAccess.getUnaryElementAccess().getExpUnaryElementParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_INT : ('0'..'9')+;

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|':'|'-')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
